using SanteDB.OrmLite.Attributes;
using System;
using System.Collections.Generic;
using System.Text;

namespace SanteDB.Persistence.PubSub.ADO.Data.Model
{
    /// <summary>
    /// Represents a base object
    /// </summary>
    public abstract class DbBaseObject
    {
        /// <summary>
        /// Gets or sets the identifier of the object
        /// </summary>
        [AutoGenerated]
        public abstract Guid Key { get; set; }

        /// <summary>
        /// Gets or sets the creation time
        /// </summary>
        [Column("crt_utc"), NotNull, AutoGenerated]
        public DateTimeOffset CreationTime { get; set; }

        /// <summary>
        /// Gets the user which created the object
        /// </summary>
        [Column("crt_usr_id"), NotNull]
        public Guid CreatedBy { get; set; }

        /// <summary>
        /// Gets the time the data was updated
        /// </summary>
        [Column("upd_utc")]
        public DateTimeOffset? UpdatedTime { get; set; }

        /// <summary>
        /// Updated by key
        /// </summary>
        [Column("upd_usr_id")]
        public Guid? UpdatedBy { get; set; }

        /// <summary>
        /// Gets the obsoletion time
        /// </summary>
        [Column("obslt_utc")]
        public DateTimeOffset? ObsoletionTime { get; set; }

        /// <summary>
        /// Obsoletion user
        /// </summary>
        [Column("obslt_usr_id")]
        public Guid? ObsoletedBy { get; set; }


        /// <summary>
        /// True if the object is active
        /// </summary>
        [Column("is_act"), NotNull]
        public bool IsActive { get; set; }


        /// <summary>
        /// True if explicitly set obsolete to null
        /// </summary>
        public bool ObsoletedBySpecified { get; set; }
        /// <summary>
        /// True if explicitly set obsolete to null
        /// </summary>
        public bool ObsoletionTimeSpecified { get; set; }
    }
}
